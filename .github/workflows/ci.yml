name: 🚀 CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: 🔍 Lint
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1
          run_install: false

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Run linting
        run: pnpm lint

  build-and-test:
    name: 🏗️ Build & Test
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1
          run_install: false

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build packages
        run: pnpm build:all

      - name: 🧪 Run unit tests
        run: |
          pnpm --filter astro-prometheus-node-integration test -- --run
          pnpm --filter astro-opentelemetry-integration test -- --run

  e2e-prometheus:
    name: 🧪 E2E Tests - Prometheus
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1
          run_install: false

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build packages
        run: pnpm build:all

      - name: 🎭 Install Playwright browsers
        run: pnpx playwright install --with-deps

      - name: 🧪 Run Prometheus E2E tests
        run: pnpm test:e2e:ci
        working-directory: playgrounds/prometheus

      - name: 📊 Upload Prometheus test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: prometheus-e2e-results
          path: playgrounds/prometheus/test-results/
          retention-days: 30

      - name: 📊 Upload Prometheus Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: prometheus-playwright-report
          path: playgrounds/prometheus/playwright-report/
          retention-days: 30

  e2e-otel:
    name: 🧪 E2E Tests - OpenTelemetry
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1
          run_install: false

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build packages
        run: pnpm build:all

      - name: 🎭 Install Playwright browsers
        run: pnpx playwright install --with-deps

      - name: 🧪 Run OpenTelemetry E2E tests
        run: pnpm test:e2e:ci
        working-directory: playgrounds/otel

      - name: 📊 Upload OpenTelemetry test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: otel-e2e-results
          path: playgrounds/otel/test-results/
          retention-days: 30

      - name: 📊 Upload OpenTelemetry Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: otel-playwright-report
          path: playgrounds/otel/playwright-report/
          retention-days: 30

  ci-summary:
    name: 📋 CI Summary
    runs-on: ubuntu-latest
    needs: [e2e-prometheus, e2e-otel]
    if: always()
    steps:
      - name: 📋 Create CI Summary
        run: |
          echo "## 🚀 CI Pipeline Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ Prometheus E2E Tests" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.e2e-prometheus.result }}" == "success" ]; then
            echo "✅ **PASSED** - All Prometheus integration tests passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **FAILED** - Prometheus tests failed" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ OpenTelemetry E2E Tests" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.e2e-otel.result }}" == "success" ]; then
            echo "✅ **PASSED** - All OpenTelemetry integration tests passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **FAILED** - OpenTelemetry tests failed" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Test Coverage" >> $GITHUB_STEP_SUMMARY
          echo "- **Prometheus**: OpenMetrics format, integration functionality, standalone metrics" >> $GITHUB_STEP_SUMMARY
          echo "- **OpenTelemetry**: Prometheus preset, HTTP mock-server, gRPC mock-server" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Test results and Playwright reports available in the Actions tab" >> $GITHUB_STEP_SUMMARY