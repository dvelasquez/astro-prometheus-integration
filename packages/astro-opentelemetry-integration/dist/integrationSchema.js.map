{"version":3,"sources":["../src/integrationSchema.ts"],"sourcesContent":["import { z } from \"astro/zod\";\n\nexport const integrationSchema = z\n\t.object({\n\t\tenabled: z\n\t\t\t.boolean()\n\t\t\t.default(true)\n\t\t\t.describe(\n\t\t\t\t\"Enable the integration. You might want to disable it in dev mode.\",\n\t\t\t),\n\t\totel: z\n\t\t\t.object({\n\t\t\t\tserviceName: z\n\t\t\t\t\t.string()\n\t\t\t\t\t.default(\"unknown_service\")\n\t\t\t\t\t.describe(\"The name of the service.\"),\n\t\t\t\tserviceVersion: z\n\t\t\t\t\t.string()\n\t\t\t\t\t.default(\"unknown_version\")\n\t\t\t\t\t.describe(\"The version of the service.\"),\n\t\t\t})\n\t\t\t.default({}),\n\t\tpresets: z\n\t\t\t.object({\n\t\t\t\tmetricExporter: z\n\t\t\t\t\t.enum([\"proto\", \"http\", \"grpc\", \"prometheus\", \"none\"])\n\t\t\t\t\t.default(\"none\")\n\t\t\t\t\t.describe(\"The metric exporter to use.\")\n\t\t\t\t\t.optional(),\n\t\t\t\ttraceExporter: z\n\t\t\t\t\t.enum([\"proto\", \"http\", \"grpc\", \"console\"])\n\t\t\t\t\t.default(\"console\")\n\t\t\t\t\t.describe(\"The trace exporter to use.\")\n\t\t\t\t\t.optional(),\n\t\t\t\tprometheusConfig: z\n\t\t\t\t\t.object({\n\t\t\t\t\t\thost: z\n\t\t\t\t\t\t\t.string()\n\t\t\t\t\t\t\t.default(\"0.0.0.0\")\n\t\t\t\t\t\t\t.describe(\"The host to listen on.\")\n\t\t\t\t\t\t\t.optional(),\n\t\t\t\t\t\tport: z\n\t\t\t\t\t\t\t.number()\n\t\t\t\t\t\t\t.default(9464)\n\t\t\t\t\t\t\t.describe(\"The port to listen on.\")\n\t\t\t\t\t\t\t.optional(),\n\t\t\t\t\t\tendpoint: z\n\t\t\t\t\t\t\t.string()\n\t\t\t\t\t\t\t.default(\"/metrics\")\n\t\t\t\t\t\t\t.describe(\"The endpoint to use for the metrics.\")\n\t\t\t\t\t\t\t.optional(),\n\t\t\t\t\t\tprefix: z\n\t\t\t\t\t\t\t.string()\n\t\t\t\t\t\t\t.default(\"metrics\")\n\t\t\t\t\t\t\t.describe(\"The prefix to use for the metrics.\")\n\t\t\t\t\t\t\t.optional(),\n\t\t\t\t\t\tappendTimestamp: z\n\t\t\t\t\t\t\t.boolean()\n\t\t\t\t\t\t\t.default(true)\n\t\t\t\t\t\t\t.describe(\"Whether to append the timestamp to the metrics.\")\n\t\t\t\t\t\t\t.optional(),\n\t\t\t\t\t\twithResourceConstantLabels: z\n\t\t\t\t\t\t\t.string()\n\t\t\t\t\t\t\t.describe(\n\t\t\t\t\t\t\t\t\"The regular expression to match the resource constant labels.\",\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.optional()\n\t\t\t\t\t\t\t.default(\"/service/\"),\n\t\t\t\t\t})\n\t\t\t\t\t.describe(\n\t\t\t\t\t\t\"The configuration for the Prometheus exporter, more info here https://www.npmjs.com/package/@opentelemetry/exporter-prometheus.\",\n\t\t\t\t\t)\n\t\t\t\t\t.optional(),\n\t\t\t})\n\t\t\t.optional(),\n\t})\n\t.default({});\n\nexport type IntegrationSchema = z.infer<typeof integrationSchema>;\n"],"mappings":";AAAA,SAAS,SAAS;AAEX,IAAM,oBAAoB,EAC/B,OAAO;AAAA,EACP,SAAS,EACP,QAAQ,EACR,QAAQ,IAAI,EACZ;AAAA,IACA;AAAA,EACD;AAAA,EACD,MAAM,EACJ,OAAO;AAAA,IACP,aAAa,EACX,OAAO,EACP,QAAQ,iBAAiB,EACzB,SAAS,0BAA0B;AAAA,IACrC,gBAAgB,EACd,OAAO,EACP,QAAQ,iBAAiB,EACzB,SAAS,6BAA6B;AAAA,EACzC,CAAC,EACA,QAAQ,CAAC,CAAC;AAAA,EACZ,SAAS,EACP,OAAO;AAAA,IACP,gBAAgB,EACd,KAAK,CAAC,SAAS,QAAQ,QAAQ,cAAc,MAAM,CAAC,EACpD,QAAQ,MAAM,EACd,SAAS,6BAA6B,EACtC,SAAS;AAAA,IACX,eAAe,EACb,KAAK,CAAC,SAAS,QAAQ,QAAQ,SAAS,CAAC,EACzC,QAAQ,SAAS,EACjB,SAAS,4BAA4B,EACrC,SAAS;AAAA,IACX,kBAAkB,EAChB,OAAO;AAAA,MACP,MAAM,EACJ,OAAO,EACP,QAAQ,SAAS,EACjB,SAAS,wBAAwB,EACjC,SAAS;AAAA,MACX,MAAM,EACJ,OAAO,EACP,QAAQ,IAAI,EACZ,SAAS,wBAAwB,EACjC,SAAS;AAAA,MACX,UAAU,EACR,OAAO,EACP,QAAQ,UAAU,EAClB,SAAS,sCAAsC,EAC/C,SAAS;AAAA,MACX,QAAQ,EACN,OAAO,EACP,QAAQ,SAAS,EACjB,SAAS,oCAAoC,EAC7C,SAAS;AAAA,MACX,iBAAiB,EACf,QAAQ,EACR,QAAQ,IAAI,EACZ,SAAS,iDAAiD,EAC1D,SAAS;AAAA,MACX,4BAA4B,EAC1B,OAAO,EACP;AAAA,QACA;AAAA,MACD,EACC,SAAS,EACT,QAAQ,WAAW;AAAA,IACtB,CAAC,EACA;AAAA,MACA;AAAA,IACD,EACC,SAAS;AAAA,EACZ,CAAC,EACA,SAAS;AACZ,CAAC,EACA,QAAQ,CAAC,CAAC;","names":[]}